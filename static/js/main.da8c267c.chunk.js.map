{"version":3,"sources":["components/MainHeader.js","components/MainContent.js","components/Main.js","components/LastTable.js","components/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["MainHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDateChange","selectedDate","event","setState","defineProperty","Date","handleChange","name","age","age1","target","value","state","react_default","a","createElement","className","onSubmit","getData","material_ui_pickers_esm","utils","MomentUtils","autoOk","variant","label","format","onChange","FormControl","InputLabel","shrink","htmlFor","NativeSelect","input","Input","id","Button","type","color","Icon","Component","MainContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","api_url","item","wrap","_context","prev","next","preventDefault","fetch","sent","json","console","log","stop","_x","apply","arguments","error","city","venue","data","items","src_components_MainHeader","es","defaultFilterMethod","filter","row","String","columns","Header","accessor","d","lastName","Cell","_ref2","filterMethod","Filter","_ref3","style","width","defaultPageSize","React","Main","components_MainContent","LastTable","for","placeholder","inputProps","aria-label","required","TabContainer","children","dir","Typography","component","TopNav","setValue","theme","useTheme","bind","assertThisInitialized","handleChangeIndex","newValue","index","AppBar","position","Tabs","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","Main_Main","src_components_LastTable","App","src_components_TopNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da8c267c.chunk.js","sourcesContent":["import React, { useState, Component } from \"react\";\r\nimport './MainHeader.css'\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        selectedDate: new Date(\"2018-01-01T00:00:00.000Z\"),\r\n       \r\n        age: '',\r\n        age1: '',\r\n        name: 'hai',\r\n      }\r\n  }\r\n  handleDateChange = selectedDate => event=> {\r\n    this.setState({\r\n      [selectedDate]: new Date(),\r\n    })\r\n  }\r\n\r\n   handleChange = name => event => {\r\n    this.setState({\r\n      \r\n      age: '',\r\n      age1: '',\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n  return (\r\n      <div className=\"main-header\">\r\n          <div className=\"wrapper\">\r\n           <form onSubmit={this.props.getData}>\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n    <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date from\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.handleDateChange('selectedDate')}\r\n      />\r\n\r\n<KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date to\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.handleDateChange('selectedDate')}\r\n      />\r\n  </MuiPickersUtilsProvider>\r\n  <FormControl className=\"\">\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Location\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.age}\r\n          onChange={this.handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">All </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <FormControl className=\"Location\">\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Location2\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.age1}\r\n          onChange={this.handleChange('age1')}\r\n          input={<Input name=\"age1\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">All </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"button\">\r\n        Apply\r\n       \r\n        <Icon className=\"rightIcon\"> send</Icon>\r\n                </Button>\r\n                </form>\r\n  </div>\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default MainHeader\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { makeData, Logo, Tips } from \"./Utils\";\r\nimport matchSorter from 'match-sorter'\r\nimport MainHeader from './MainHeader';\r\n// Import React Table\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nclass MainContent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      city: '',\r\n      venue: '',\r\n      data: []\r\n    };\r\n  }\r\n getData = async (e) => {\r\n   e.preventDefault();\r\n    const api_url = await\r\n    fetch(`http://172.110.7.117:5000/events`)\r\n    const item = await api_url.json\r\n    console.log(item)\r\n  }\r\n  \r\n  render() {\r\n    const { items } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <MainHeader getData={this.getData}/>\r\n        <ReactTable\r\n          data={items}\r\n          \r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value}\r\n          columns={[\r\n            {\r\n             \r\n              columns: [\r\n                {\r\n                  Header: \"First Name\",\r\n                  accessor: \"firstName\",\r\n                 \r\n                 \r\n                 \r\n                },\r\n                {\r\n                  Header: \"Last Name\",\r\n                  id: \"lastName\",\r\n                  accessor: d => d.lastName,\r\n                  \r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \r\n              columns: [\r\n                {\r\n                  Header: \"Age\",\r\n                  accessor: \"age\"\r\n                },\r\n                {\r\n                  Header: \"Over 21\",\r\n                  accessor: \"age\",\r\n                  id: \"over\",\r\n                  Cell: ({ value }) => (value >= 21 ? \"Yes\" : \"No\"),\r\n                  filterMethod: (filter, row) => {\r\n                    if (filter.value === \"all\") {\r\n                      return true;\r\n                    }\r\n                    if (filter.value === \"true\") {\r\n                      return row[filter.id] >= 21;\r\n                    }\r\n                    return row[filter.id] < 21;\r\n                  },\r\n                  Filter: ({ filter, onChange }) =>\r\n                    <select\r\n                      onChange={event => onChange(event.target.value)}\r\n                      style={{ width: \"100%\" }}\r\n                      value={filter ? filter.value : \"all\"}\r\n                    >\r\n                      <option value=\"all\">Show All</option>\r\n                      <option value=\"true\">Can Drink</option>\r\n                      <option value=\"false\">Can't Drink</option>\r\n                    </select>\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        />\r\n        <br />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport MainContent from './MainContent'\r\n\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n             \r\n           \r\n            <MainContent />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport \"./LastTable.css\"\nimport Input from '@material-ui/core/Input';\nimport { FormControl } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\n\nclass LastTable extends Component {\n    render() {\n        return(\n            <div className=\"last-table\">\n                <div className=\"wrapper\"> \n                  <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                    required\n                />\n                </FormControl>\n                <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                 <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                />\n                </FormControl>\n                <Button variant=\"contained\" color=\"primary\" className=\"button\">\n        Apply\n       \n        <Icon className=\"rightIcon\"> send</Icon>\n                </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LastTable ","import React, { Component } from 'react'\nimport './TopNav.css'\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Main from './Main';\nimport LastTable from './LastTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n      <Typography component=\"div\" >\n        {children}\n      </Typography>\n    );\n  }\n  TabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n  \n  \nclass TopNav extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            value: 0 ,\n            setValue: 0,\n            theme: useTheme,\n            \n        \n        }   \n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeIndex= this.handleChangeIndex.bind(this);\n            }\n\n\n            \n            handleChange(event, newValue) {\n               this.setState({value: newValue});\n              }\n            handleChangeIndex(index) {\n                this.setState({value: index})\n              }\n    render() {\n        \n        return (\n            <div className=\"root\">\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={this.state.value}\n                onChange={this.handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"Item One\" />\n                <Tab label=\"Item Two\" />\n                <Tab label=\"Item Three\" />\n              </Tabs>\n            </AppBar>\n            <SwipeableViews\n              axis={this.state.theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n              index={this.state.value}\n              onChangeIndex={this.handleChangeIndex}\n            >\n              <TabContainer dir={this.state.theme.direction}><Main /></TabContainer>\n              <TabContainer dir={this.state.theme.direction}></TabContainer>\n              <TabContainer dir={this.state.theme.direction}><LastTable /></TabContainer>\n            </SwipeableViews>\n          </div>\n        );\n      }\n        \n    \n}\n\nexport default TopNav","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport Main from './components/Main'\nimport TopNav from './components/TopNav';\n\n\nfunction App() {\n  return (\n    <div>\n      <TopNav /> \n    \n \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}