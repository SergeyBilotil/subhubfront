{"version":3,"sources":["components/MainHeader.js","components/MainContent.js","components/Main.js","components/LastTable.js","components/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["MainHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDateChange","selectedDate","event","setState","defineProperty","Date","handleChange","name","age","age1","target","value","state","react_default","a","createElement","className","material_ui_pickers_esm","utils","MomentUtils","autoOk","variant","label","format","onChange","FormControl","InputLabel","shrink","htmlFor","NativeSelect","input","Input","id","Button","type","color","Icon","Component","MainContent","componentDidMount","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","fetch","then","res","json","result","console","log","data","stop","_x","apply","arguments","error","city","venue","src_components_MainHeader","getData","es","columns","Header","accessor","minWidth","width","defaultPageSize","React","Main","src_components_MainContent","LastTable","for","placeholder","inputProps","aria-label","required","TabContainer","children","dir","Typography","component","TopNav","setValue","theme","useTheme","bind","assertThisInitialized","handleChangeIndex","newValue","index","AppBar","position","Tabs","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","Main_Main","src_components_LastTable","App","src_components_TopNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07df8c0e.chunk.js","sourcesContent":["import React, { useState, Component } from \"react\";\r\nimport './MainHeader.css'\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        selectedDate: new Date(\"2018-01-01T00:00:00.000Z\"),\r\n       \r\n        age: '',\r\n        age1: '',\r\n        name: 'hai',\r\n      }\r\n  }\r\n  handleDateChange = selectedDate => event=> {\r\n    this.setState({\r\n      [selectedDate]: new Date(),\r\n    })\r\n  }\r\n\r\n   handleChange = name => event => {\r\n    this.setState({\r\n      \r\n      age: '',\r\n      age1: '',\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n  return (\r\n      <div className=\"main-header\">\r\n          <div className=\"wrapper\">\r\n          \r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n    <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date from\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.handleDateChange('selectedDate')}\r\n      />\r\n\r\n<KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date to\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.handleDateChange('selectedDate')}\r\n      />\r\n  </MuiPickersUtilsProvider>\r\n  <FormControl className=\"\">\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Location\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.age}\r\n          onChange={this.handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">All </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <FormControl className=\"Location\">\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Location2\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.age1}\r\n          onChange={this.handleChange('age1')}\r\n          input={<Input name=\"age1\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">All </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"button\">\r\n        Apply\r\n       \r\n        <Icon className=\"rightIcon\"> send</Icon>\r\n                </Button>\r\n             \r\n  </div>\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default MainHeader\r\n","import React from \"react\";\r\nimport MainHeader from './MainHeader';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./MainContent.css\"\r\nclass MainContent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      city: '',\r\n      venue: '',\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount  = async (e) => {\r\n  \r\n   \r\n  \r\n     fetch('http://172.110.7.117:5000/events')\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        console.log(result);\r\n        this.setState({data: result});\r\n      });\r\n \r\n  }\r\n  \r\n  render() {\r\n    const { data } = this.state;\r\n    console.log(data)\r\n    \r\n    return (\r\n      <div>\r\n        <MainHeader getData={this.getData}/>\r\n        <ReactTable \r\n          data={data}\r\n          \r\n         \r\n          columns={[\r\n            {\r\n             \r\n              columns: [\r\n                {\r\n                  Header: \"City\",\r\n                  accessor: \"City\",\r\n                  \r\n                 \r\n                 \r\n                },\r\n                {\r\n                  Header: \"Date\",\r\n                  \r\n                  accessor: \"Date\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Name\", \r\n                  accessor: \"Name\",\r\n                  minWidth: 200,\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Performers\", \r\n                  accessor: \"Performers[0]\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Status\", \r\n                  accessor: \"Status\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Venue\", \r\n                  accessor: \"Venue\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Currency Code\", \r\n                  accessor: \"currencyCode\",\r\n                  width: 150\r\n                  \r\n                },\r\n\r\n                {\r\n                  Header: \"Max Price\", \r\n                  accessor: \"maxPrice\",\r\n                  width: 100\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Min Price\", \r\n                  accessor: \"minPrice\",\r\n                  width: 100\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Total Tickets\", \r\n                  accessor: \"totalTickets\",\r\n                  width: 100\r\n                  \r\n                },\r\n                \r\n                \r\n\r\n              ]\r\n            },\r\n            \r\n            \r\n          ]}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        />\r\n        <br />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport MainContent from './MainContent'\r\n\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n             \r\n           \r\n            <MainContent />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport \"./LastTable.css\"\nimport Input from '@material-ui/core/Input';\nimport { FormControl } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\n\nclass LastTable extends Component {\n    render() {\n        return(\n            <div className=\"last-table\">\n                <div className=\"wrapper\"> \n                  <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                    required\n                />\n                </FormControl>\n                <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                 <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                />\n                </FormControl>\n                <Button variant=\"contained\" color=\"primary\" className=\"button\">\n        Apply\n       \n        <Icon className=\"rightIcon\"> send</Icon>\n                </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LastTable ","import React, { Component } from 'react'\nimport './TopNav.css'\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Main from './Main';\nimport LastTable from './LastTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n      <Typography component=\"div\" >\n        {children}\n      </Typography>\n    );\n  }\n  TabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n  \n  \nclass TopNav extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            value: 0 ,\n            setValue: 0,\n            theme: useTheme,\n            \n        \n        }   \n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeIndex= this.handleChangeIndex.bind(this);\n            }\n\n\n            \n            handleChange(event, newValue) {\n               this.setState({value: newValue});\n              }\n            handleChangeIndex(index) {\n                this.setState({value: index})\n              }\n    render() {\n        \n        return (\n            <div className=\"root\">\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={this.state.value}\n                onChange={this.handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"Item One\" />\n                <Tab label=\"Item Two\" />\n                <Tab label=\"Item Three\" />\n              </Tabs>\n            </AppBar>\n            <SwipeableViews\n              axis={this.state.theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n              index={this.state.value}\n              onChangeIndex={this.handleChangeIndex}\n            >\n              <TabContainer dir={this.state.theme.direction}><Main /></TabContainer>\n              <TabContainer dir={this.state.theme.direction}></TabContainer>\n              <TabContainer dir={this.state.theme.direction}><LastTable /></TabContainer>\n            </SwipeableViews>\n          </div>\n        );\n      }\n        \n    \n}\n\nexport default TopNav","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport Main from './components/Main'\nimport TopNav from './components/TopNav';\n\n\nfunction App() {\n  return (\n    <div>\n      <TopNav /> \n    \n \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}