{"version":3,"sources":["components/MainContent.js","components/MainHeader.js","components/Main.js","components/LastTable.js","components/LastItem.js","components/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["MainContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","city","venue","data","_this2","setCity","props","setVenue","console","log","fetch","then","res","json","result","setState","react_default","a","createElement","es","columns","Header","accessor","minWidth","width","defaultPageSize","className","React","Component","MainHeader","handleDateChange","selectedDate","SecondselecteDate","date","_this$setState","defineProperty","handleChange","name","event","target","value","FirstselectedDate","Date","Listcities","venues","items","e","_this3","preventDefault","items2","ListVenue","onSubmi","handleVenueĞ¡Change","material_ui_pickers_esm","utils","MomentUtils","autoOk","variant","label","format","onChange","FormControl","InputLabel","shrink","htmlFor","NativeSelect","age","input","Input","id","map","item","key","age1","Button","type","color","Icon","src_components_MainContent","Main","src_components_MainHeader","LastTable","for","placeholder","inputProps","aria-label","required","componentDidMount","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","src_components_LastTable","TabContainer","children","dir","Typography","component","TopNav","setValue","theme","useTheme","bind","assertThisInitialized","handleChangeIndex","newValue","index","AppBar","position","Tabs","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","Main_Main","LastItem","App","src_components_TopNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2a6e479.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./MainContent.css\"\r\nclass MainContent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      city: '',\r\n      venue: '',\r\n      data: []\r\n    };\r\n  }\r\n\r\n  loadData() {\r\n   \r\n    const setCity = this.props.city\r\n    const setVenue = this.props.venue\r\n\r\n    console.log(setCity, setVenue)\r\n    \r\n     \r\n    \r\n     fetch(`https://stubhub.dataforest.tech/events`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        \r\n        this.setState({\r\n          data: result,\r\n        \r\n        });\r\n        console.log(result)\r\n      });\r\n    \r\n  }\r\n  \r\n  \r\n  render() {\r\n    const { data } = this.state;\r\n    \r\n    \r\n    return (\r\n      <div >\r\n       \r\n        <ReactTable\r\n          \r\n     \r\n          data={data}\r\n          \r\n         \r\n          columns={[\r\n            {\r\n             \r\n              columns: [\r\n                {\r\n                  Header: \"City\",\r\n                  accessor: \"City\",\r\n                  \r\n                 \r\n                 \r\n                },\r\n                {\r\n                  Header: \"Date\",\r\n                  \r\n                  accessor: \"Date\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Time\",\r\n                  \r\n                  accessor: \"Time\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Name\", \r\n                  accessor: \"Name\",\r\n                  minWidth: 200,\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Performers\", \r\n                  accessor: \"Performers[0]\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Status\", \r\n                  accessor: \"Status\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Venue\", \r\n                  accessor: \"Venue\",\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Currency Code\", \r\n                  accessor: \"currencyCode\",\r\n                  width: 150\r\n                  \r\n                },\r\n\r\n                {\r\n                  Header: \"Max Price\", \r\n                  accessor: \"maxPrice\",\r\n                  width: 100\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Min Price\", \r\n                  accessor: \"minPrice\",\r\n                  width: 100\r\n                  \r\n                },\r\n                {\r\n                  Header: \"Total Tickets\", \r\n                  accessor: \"totalTickets\",\r\n                  width: 100\r\n                  \r\n                },\r\n                \r\n                \r\n\r\n              ]\r\n            },\r\n            \r\n            \r\n          ]}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        />\r\n        <br />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent\r\n","import React, { Component } from \"react\";\r\nimport './MainHeader.css'\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport MainContent from \"./MainContent\";\r\n\r\n\r\nclass MainHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        FirstselectedDate: new Date(),\r\n        SecondselecteDate: new Date(),\r\n        Listcities: [],\r\n        venues: [],\r\n        city: '',\r\n        venue: '',\r\n        name: 'hai',\r\n      \r\n      }\r\n  }\r\n  componentWillMount() {\r\n    fetch(`https://stubhub.dataforest.tech/cities`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (items) => {\r\n        \r\n        this.setState({\r\n          Listcities: items,\r\n        \r\n        });\r\n        \r\n      });\r\n    \r\n  }\r\n  handleVenueĞ¡Change(e) {\r\n    e.preventDefault()\r\n   \r\n    fetch(`https://stubhub.dataforest.tech/venues?city=`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (items2) => {\r\n        \r\n        this.setState({\r\n          venues: items2,\r\n        \r\n        });\r\n        console.log(items2)\r\n      });\r\n    \r\n  }\r\n  handleDateChange = (selectedDate,SecondselecteDate) => date=> {\r\n   \r\n    this.setState({\r\n      [selectedDate]: date,\r\n      [SecondselecteDate]: date\r\n    })\r\n  }\r\n\r\n   handleChange = name => event => {\r\n    \r\n    this.setState({\r\n      \r\n      city: '',\r\n      venue: '',\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n  \r\n  const Listcities = this.state.Listcities\r\n  const ListVenue = this.state.venue\r\n  console.log(ListVenue)\r\n  \r\n  return (\r\n    \r\n    <div className=\"main-content\">\r\n      <div className=\"main-header\">\r\n          <div className=\"wrapper\">\r\n            \r\n          <form onSubmi={this.handleVenueĞ¡Change}>\r\n    <MuiPickersUtilsProvider utils={MomentUtils} >\r\n    <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date from\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.handleDateChange('selectedDate')}\r\n      />\r\n\r\n<KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        label=\"Date to\"\r\n        format=\"MM/DD/YYYY\"\r\n        value={this.state.SecondselecteDate}\r\n        onChange={this.handleDateChange('SecondselecteDate')}\r\n      />\r\n  </MuiPickersUtilsProvider>\r\n  <FormControl className=\"\" >\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          City\r\n        </InputLabel>\r\n        <NativeSelect\r\n          name=\"city\"\r\n          value={this.state.age}\r\n          onChange={this.handleChange('city')}\r\n          input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          {Listcities.map(item => (\r\n                <option key={item}>\r\n                  {item}\r\n                </option>\r\n              ))}\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <FormControl className=\"Location\">\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Venue\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.age1}\r\n          onChange={this.handleChange('venue')}\r\n          input={<Input name=\"age1\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">All </option>\r\n          <option value=\"Stadio Olimpico\">Stadio Olimpico</option>\r\n          <option value=\"York Lions Stadium\">York Lions Stadium</option>\r\n          <option value=\"Hungaroring\">Hungaroring</option>\r\n        </NativeSelect>\r\n        \r\n      </FormControl>\r\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"button\">\r\n        Apply\r\n       \r\n        <Icon className=\"rightIcon\"> send</Icon>\r\n                </Button>\r\n      </form>\r\n             \r\n  </div>\r\n   \r\n  </div>\r\n  <MainContent city={this.state.city} venue={this.state.venue}/>\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default MainHeader\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport MainHeader from './MainHeader';\r\nimport MainContent from './MainContent';\r\n\r\nexport default class Main extends Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n             \r\n           \r\n            <MainHeader />\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport \"./LastTable.css\"\nimport Input from '@material-ui/core/Input';\nimport { FormControl } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\n\nclass LastTable extends Component {\n    render() {\n        return(\n            <div className=\"last-table\">\n                <div className=\"wrapper\"> \n                  <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                    required\n                />\n                </FormControl>\n                <FormControl>\n                <label for=\"first-input\">Write you text</label>\n                 <Input\n                    placeholder=\"\"\n                    className=\"input\"\n                    inputProps={{\n                    'aria-label': 'Description',\n                    }}\n                />\n                </FormControl>\n                <Button variant=\"contained\" color=\"primary\" className=\"button\">\n        Apply\n       \n        <Icon className=\"rightIcon\"> send</Icon>\n                </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LastTable ","import React from \"react\";\nimport MainHeader from './MainHeader';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport \"./MainContent.css\";\nimport LastTable from \"./LastTable\"\nclass MainContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      city: '',\n      venue: '',\n      data: []\n    };\n  }\n  componentDidMount  = async (e) => {\n  \n    \n  \n     fetch('')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result);\n        this.setState({data: result});\n      });\n \n  }\n  \n  render() {\n    const { data } = this.state;\n    console.log(data)\n    \n    return (\n      <div>\n        <LastTable />\n        <ReactTable \n          data={data}\n          \n         \n          columns={[\n            {\n             \n              columns: [\n                {\n                  Header: \"City\",\n                  accessor: \"City\",\n                  \n                 \n                 \n                },\n                {\n                  Header: \"Date\",\n                  \n                  accessor: \"Date\",\n                  \n                },\n                {\n                  Header: \"Name\", \n                  accessor: \"Name\",\n                  minWidth: 200,\n                  \n                },\n                {\n                  Header: \"Performers\", \n                  accessor: \"Performers[0]\",\n                  \n                },\n                {\n                  Header: \"Status\", \n                  accessor: \"Status\",\n                  \n                },\n                {\n                  Header: \"Venue\", \n                  accessor: \"Venue\",\n                  \n                },\n                {\n                  Header: \"Currency Code\", \n                  accessor: \"currencyCode\",\n                  width: 150\n                  \n                },\n\n                {\n                  Header: \"Max Price\", \n                  accessor: \"maxPrice\",\n                  width: 100\n                  \n                },\n                {\n                  Header: \"Min Price\", \n                  accessor: \"minPrice\",\n                  width: 100\n                  \n                },\n                {\n                  Header: \"Total Tickets\", \n                  accessor: \"totalTickets\",\n                  width: 100\n                  \n                },\n                \n                \n\n              ]\n            },\n            \n            \n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n        <br />\n       \n      </div>\n    );\n  }\n}\n\nexport default MainContent\n","import React, { Component } from 'react'\nimport './TopNav.css'\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Main from './Main';\nimport LastItem from './LastItem';\n\nfunction TabContainer({ children, dir }) {\n    return (\n      <Typography component=\"div\" >\n        {children}\n      </Typography>\n    );\n  }\n  TabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n  \n  \nclass TopNav extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            value: 0 ,\n            setValue: 0,\n            theme: useTheme,\n            \n        \n        }   \n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeIndex= this.handleChangeIndex.bind(this);\n            }\n\n\n            \n            handleChange(event, newValue) {\n               this.setState({value: newValue});\n              }\n            handleChangeIndex(index) {\n                this.setState({value: index})\n              }\n    render() {\n        \n        return (\n            <div className=\"root\">\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={this.state.value}\n                onChange={this.handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"Item One\" />\n                <Tab label=\"Item Two\" />\n                <Tab label=\"Item Three\" />\n              </Tabs>\n            </AppBar>\n            <SwipeableViews\n              axis={this.state.theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n              index={this.state.value}\n              onChangeIndex={this.handleChangeIndex}\n            >\n              <TabContainer dir={this.state.theme.direction}><Main /></TabContainer>\n              <TabContainer dir={this.state.theme.direction}></TabContainer>\n              <TabContainer dir={this.state.theme.direction}><LastItem /></TabContainer>\n            </SwipeableViews>\n          </div>\n        );\n      }\n        \n    \n}\n\nexport default TopNav","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport Main from './components/Main'\nimport TopNav from './components/TopNav';\n\n\nfunction App() {\n  return (\n    <div>\n      <TopNav /> \n    \n \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}